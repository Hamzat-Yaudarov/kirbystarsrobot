import { BotContext } from '../types';

export async function handleGetStars(ctx: BotContext) {
  if (!ctx.user) {
    await ctx.answerCbQuery('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return;
  }

  const botUsername = ctx.botInfo?.username || 'your_bot';
  const referralLink = `https://t.me/${botUsername}?start=${ctx.user.referralCode}`;

  const starsText = `üåü –ü–æ–ª—É—á–∏—Ç—å –∑–≤—ë–∑–¥—ã

üíé –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ:

üë• –ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞:
üí∞ +3 ‚≠ê —Å—Ä–∞–∑—É –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏

üë•üë• –ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞ –≤–∞—à–∏—Ö –¥—Ä—É–∑–µ–π:
üí∞ +0.05 ‚≠ê –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏

üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:
\`${referralLink}\`

üìã –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –¥—Ä—É–∑—å—è–º
2. –î—Ä—É–≥ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –ø–æ —Å—Å—ã–ª–∫–µ –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞
3. –í—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∞–µ—Ç–µ –∑–≤—ë–∑–¥—ã!

üí° –ß–µ–º –±–æ–ª—å—à–µ –¥—Ä—É–∑–µ–π –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ, —Ç–µ–º –±–æ–ª—å—à–µ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç–µ!

üì¶ –ë–æ–Ω—É—Å: –ü—Ä–∏ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–∏ 3+ –¥—Ä—É–∑–µ–π –≤ –¥–µ–Ω—å, –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å!`;

  const keyboard = {
    inline_keyboard: [
      [{ text: 'üìä –ú–æ–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—ã', callback_data: 'profile' }],
      [{ text: 'üì¶ –û—Ç–∫—Ä—ã—Ç—å –∫–µ–π—Å', callback_data: 'cases' }],
      [{ text: 'üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'back_to_menu' }]
    ]
  };

  try {
    await ctx.editMessageText(starsText, { 
      reply_markup: keyboard,
      parse_mode: 'Markdown'
    });
    await ctx.answerCbQuery();
  } catch (error) {
    console.error('Error in handleGetStars:', error);
    await ctx.answerCbQuery('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏');
  }
}
