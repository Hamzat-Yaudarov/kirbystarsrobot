import React, { useState, useEffect } from 'react'
import {
  Grid,
  Paper,
  Typography,
  Box,
  Card,
  CardContent,
  CircularProgress,
  Alert,
} from '@mui/material'
import {
  People,
  Star,
  Assignment,
  Pets,
  Casino,
  LocalOffer,
  TrendingUp,
} from '@mui/icons-material'
import {
  LineChart,
  Line,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  ResponsiveContainer,
} from 'recharts'
import { statsApi } from '../services/api'

interface Stats {
  –æ–±—â–µ–µ: {
    –≤—Å–µ–≥–æ–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: number
    –∞–∫—Ç–∏–≤–Ω—ã—Ö–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: number
    –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: number
    –æ–±—â–∏–π–ë–∞–ª–∞–Ω—Å–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: number
  }
  —Å–µ–≥–æ–¥–Ω—è: {
    –Ω–æ–≤—ã—Ö–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: number
    –∫–ª–∏–∫–æ–≤: number
  }
  –∑–∞–¥–∞–Ω–∏—è: {
    –≤—Å–µ–≥–æ–ó–∞–¥–∞–Ω–∏–π: number
    –∞–∫—Ç–∏–≤–Ω—ã—Ö–ó–∞–¥–∞–Ω–∏–π: number
    –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö–ó–∞–¥–∞–Ω–∏–π: number
  }
  –ø–∏—Ç–æ–º—Ü—ã: {
    –≤—Å–µ–≥–æ–ü–∏—Ç–æ–º—Ü–µ–≤: number
    –ø—Ä–æ–¥–∞–Ω–æ: number
  }
  –ª–æ—Ç–µ—Ä–µ–∏: {
    –∞–∫—Ç–∏–≤–Ω—ã—Ö–õ–æ—Ç–µ—Ä–µ–π: number
    –±–∏–ª–µ—Ç–æ–≤–ü—Ä–æ–¥–∞–Ω–æ: number
  }
  –ø—Ä–æ–º–æ–∫–æ–¥—ã: {
    –≤—Å–µ–≥–æ–ü—Ä–æ–º–æ–∫–æ–¥–æ–≤: number
    –∞–∫—Ç–∏–≤–Ω—ã—Ö–ü—Ä–æ–º–æ–∫–æ–¥–æ–≤: number
    –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: number
  }
  –≤—ã–≤–æ–¥—ã: {
    –æ–∂–∏–¥–∞—é—â–∏–µ: number
    –æ–¥–æ–±—Ä–µ–Ω–Ω—ã–µ: number
    –æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ: number
  }
  —Ç–æ–ø–†–µ—Ñ–µ—Ä–µ—Ä–æ–≤: Array<{
    firstName: string
    username: string
    _count: { referrals: number }
  }>
  —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞–ü–æ–î–Ω—è–º: Array<{
    date: string
    newUsers: number
  }>
}

const Dashboard: React.FC = () => {
  const [stats, setStats] = useState<Stats | null>(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState('')

  useEffect(() => {
    loadStats()
  }, [])

  const loadStats = async () => {
    try {
      setLoading(true)
      const response = await statsApi.getStats()
      setStats(response.data)
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error)
      setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏')
    } finally {
      setLoading(false)
    }
  }

  if (loading) {
    return (
      <Box display="flex" justifyContent="center" alignItems="center" minHeight="400px">
        <CircularProgress />
      </Box>
    )
  }

  if (error) {
    return <Alert severity="error">{error}</Alert>
  }

  if (!stats) {
    return <Alert severity="warning">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</Alert>
  }

  const StatCard: React.FC<{
    title: string
    value: number | string
    icon: React.ReactNode
    color?: string
  }> = ({ title, value, icon, color = 'primary.main' }) => (
    <Card>
      <CardContent>
        <Box display="flex" alignItems="center" justifyContent="space-between">
          <Box>
            <Typography color="textSecondary" gutterBottom variant="body2">
              {title}
            </Typography>
            <Typography variant="h4" component="div">
              {value}
            </Typography>
          </Box>
          <Box sx={{ color, fontSize: 40 }}>
            {icon}
          </Box>
        </Box>
      </CardContent>
    </Card>
  )

  return (
    <Box>
      <Typography variant="h4" gutterBottom>
        üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞
      </Typography>

      {/* –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ */}
      <Grid container spacing={3} sx={{ mb: 3 }}>
        <Grid item xs={12} sm={6} md={3}>
          <StatCard
            title="–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
            value={stats.–æ–±—â–µ–µ.–≤—Å–µ–≥–æ–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π}
            icon={<People />}
            color="primary.main"
          />
        </Grid>
        <Grid item xs={12} sm={6} md={3}>
          <StatCard
            title="–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
            value={stats.–æ–±—â–µ–µ.–∞–∫—Ç–∏–≤–Ω—ã—Ö–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π}
            icon={<TrendingUp />}
            color="success.main"
          />
        </Grid>
        <Grid item xs={12} sm={6} md={3}>
          <StatCard
            title="–ù–æ–≤—ã—Ö –∑–∞ —Å–µ–≥–æ–¥–Ω—è"
            value={stats.—Å–µ–≥–æ–¥–Ω—è.–Ω–æ–≤—ã—Ö–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π}
            icon={<People />}
            color="info.main"
          />
        </Grid>
        <Grid item xs={12} sm={6} md={3}>
          <StatCard
            title="–û–±—â–∏–π –±–∞–ª–∞–Ω—Å ‚≠ê"
            value={stats.–æ–±—â–µ–µ.–æ–±—â–∏–π–ë–∞–ª–∞–Ω—Å–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.toFixed(2)}
            icon={<Star />}
            color="warning.main"
          />
        </Grid>
      </Grid>

      <Grid container spacing={3}>
        {/* –ì—Ä–∞—Ñ–∏–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π */}
        <Grid item xs={12} md={8}>
          <Paper sx={{ p: 2 }}>
            <Typography variant="h6" gutterBottom>
              üìà –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
            </Typography>
            <ResponsiveContainer width="100%" height={300}>
              <LineChart data={stats.—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞–ü–æ–î–Ω—è–º}>
                <CartesianGrid strokeDasharray="3 3" />
                <XAxis dataKey="date" />
                <YAxis />
                <Tooltip />
                <Line
                  type="monotone"
                  dataKey="newUsers"
                  stroke="#1976d2"
                  strokeWidth={2}
                  name="–ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"
                />
              </LineChart>
            </ResponsiveContainer>
          </Paper>
        </Grid>

        {/* –¢–æ–ø —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤ */}
        <Grid item xs={12} md={4}>
          <Paper sx={{ p: 2 }}>
            <Typography variant="h6" gutterBottom>
              üèÜ –¢–æ–ø —Ä–µ—Ñ–µ—Ä–µ—Ä–æ–≤
            </Typography>
            {stats.—Ç–æ–ø–†–µ—Ñ–µ—Ä–µ—Ä–æ–≤.length > 0 ? (
              stats.—Ç–æ–ø–†–µ—Ñ–µ—Ä–µ—Ä–æ–≤.map((user, index) => (
                <Box
                  key={index}
                  display="flex"
                  justifyContent="space-between"
                  alignItems="center"
                  sx={{ py: 1, borderBottom: '1px solid #eee' }}
                >
                  <Typography variant="body2">
                    {user.firstName || user.username || '–ê–Ω–æ–Ω–∏–º'}
                  </Typography>
                  <Typography variant="body2" color="primary">
                    {user._count.referrals} —Ä–µ—Ñ.
                  </Typography>
                </Box>
              ))
            ) : (
              <Typography variant="body2" color="textSecondary">
                –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö
              </Typography>
            )}
          </Paper>
        </Grid>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–æ–¥—É–ª—è–º */}
        <Grid item xs={12} md={6}>
          <Paper sx={{ p: 2 }}>
            <Typography variant="h6" gutterBottom>
              üìã –ó–∞–¥–∞–Ω–∏—è
            </Typography>
            <Grid container spacing={2}>
              <Grid item xs={4}>
                <StatCard
                  title="–í—Å–µ–≥–æ"
                  value={stats.–∑–∞–¥–∞–Ω–∏—è.–≤—Å–µ–≥–æ–ó–∞–¥–∞–Ω–∏–π}
                  icon={<Assignment />}
                />
              </Grid>
              <Grid item xs={4}>
                <StatCard
                  title="–ê–∫—Ç–∏–≤–Ω—ã—Ö"
                  value={stats.–∑–∞–¥–∞–Ω–∏—è.–∞–∫—Ç–∏–≤–Ω—ã—Ö–ó–∞–¥–∞–Ω–∏–π}
                  icon={<Assignment />}
                />
              </Grid>
              <Grid item xs={4}>
                <StatCard
                  title="–í—ã–ø–æ–ª–Ω–µ–Ω–æ"
                  value={stats.–∑–∞–¥–∞–Ω–∏—è.–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö–ó–∞–¥–∞–Ω–∏–π}
                  icon={<Assignment />}
                />
              </Grid>
            </Grid>
          </Paper>
        </Grid>

        <Grid item xs={12} md={6}>
          <Paper sx={{ p: 2 }}>
            <Typography variant="h6" gutterBottom>
              üêæ –ü–∏—Ç–æ–º—Ü—ã
            </Typography>
            <Grid container spacing={2}>
              <Grid item xs={6}>
                <StatCard
                  title="–í—Å–µ–≥–æ –≤–∏–¥–æ–≤"
                  value={stats.–ø–∏—Ç–æ–º—Ü—ã.–≤—Å–µ–≥–æ–ü–∏—Ç–æ–º—Ü–µ–≤}
                  icon={<Pets />}
                />
              </Grid>
              <Grid item xs={6}>
                <StatCard
                  title="–ü—Ä–æ–¥–∞–Ω–æ"
                  value={stats.–ø–∏—Ç–æ–º—Ü—ã.–ø—Ä–æ–¥–∞–Ω–æ}
                  icon={<Pets />}
                />
              </Grid>
            </Grid>
          </Paper>
        </Grid>

        {/* –û—Å—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <Grid item xs={12} md={4}>
          <Paper sx={{ p: 2 }}>
            <Typography variant="h6" gutterBottom>
              üé∞ –õ–æ—Ç–µ—Ä–µ–∏
            </Typography>
            <Box display="flex" justifyContent="space-between" sx={{ mb: 1 }}>
              <Typography variant="body2">–ê–∫—Ç–∏–≤–Ω—ã—Ö:</Typography>
              <Typography variant="body2">{stats.–ª–æ—Ç–µ—Ä–µ–∏.–∞–∫—Ç–∏–≤–Ω—ã—Ö–õ–æ—Ç–µ—Ä–µ–π}</Typography>
            </Box>
            <Box display="flex" justifyContent="space-between">
              <Typography variant="body2">–ë–∏–ª–µ—Ç–æ–≤ –ø—Ä–æ–¥–∞–Ω–æ:</Typography>
              <Typography variant="body2">{stats.–ª–æ—Ç–µ—Ä–µ–∏.–±–∏–ª–µ—Ç–æ–≤–ü—Ä–æ–¥–∞–Ω–æ}</Typography>
            </Box>
          </Paper>
        </Grid>

        <Grid item xs={12} md={4}>
          <Paper sx={{ p: 2 }}>
            <Typography variant="h6" gutterBottom>
              üé´ –ü—Ä–æ–º–æ–∫–æ–¥—ã
            </Typography>
            <Box display="flex" justifyContent="space-between" sx={{ mb: 1 }}>
              <Typography variant="body2">–í—Å–µ–≥–æ:</Typography>
              <Typography variant="body2">{stats.–ø—Ä–æ–º–æ–∫–æ–¥—ã.–≤—Å–µ–≥–æ–ü—Ä–æ–º–æ–∫–æ–¥–æ–≤}</Typography>
            </Box>
            <Box display="flex" justifyContent="space-between" sx={{ mb: 1 }}>
              <Typography variant="body2">–ê–∫—Ç–∏–≤–Ω—ã—Ö:</Typography>
              <Typography variant="body2">{stats.–ø—Ä–æ–º–æ–∫–æ–¥—ã.–∞–∫—Ç–∏–≤–Ω—ã—Ö–ü—Ä–æ–º–æ–∫–æ–¥–æ–≤}</Typography>
            </Box>
            <Box display="flex" justifyContent="space-between">
              <Typography variant="body2">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ:</Typography>
              <Typography variant="body2">{stats.–ø—Ä–æ–º–æ–∫–æ–¥—ã.–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ}</Typography>
            </Box>
          </Paper>
        </Grid>

        <Grid item xs={12} md={4}>
          <Paper sx={{ p: 2 }}>
            <Typography variant="h6" gutterBottom>
              üí∏ –í—ã–≤–æ–¥—ã
            </Typography>
            <Box display="flex" justifyContent="space-between" sx={{ mb: 1 }}>
              <Typography variant="body2">–û–∂–∏–¥–∞—é—â–∏–µ:</Typography>
              <Typography variant="body2" color="warning.main">
                {stats.–≤—ã–≤–æ–¥—ã.–æ–∂–∏–¥–∞—é—â–∏–µ}
              </Typography>
            </Box>
            <Box display="flex" justifyContent="space-between" sx={{ mb: 1 }}>
              <Typography variant="body2">–û–¥–æ–±—Ä–µ–Ω–Ω—ã–µ:</Typography>
              <Typography variant="body2" color="success.main">
                {stats.–≤—ã–≤–æ–¥—ã.–æ–¥–æ–±—Ä–µ–Ω–Ω—ã–µ}
              </Typography>
            </Box>
            <Box display="flex" justifyContent="space-between">
              <Typography variant="body2">–û—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ:</Typography>
              <Typography variant="body2" color="error.main">
                {stats.–≤—ã–≤–æ–¥—ã.–æ—Ç–∫–ª–æ–Ω–µ–Ω–Ω—ã–µ}
              </Typography>
            </Box>
          </Paper>
        </Grid>
      </Grid>
    </Box>
  )
}

export default Dashboard
